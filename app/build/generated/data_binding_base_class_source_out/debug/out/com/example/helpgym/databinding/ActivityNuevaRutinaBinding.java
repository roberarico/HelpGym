// Generated by view binder compiler. Do not edit!
package com.example.helpgym.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.helpgym.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNuevaRutinaBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonAddExercise;

  @NonNull
  public final Button confirmar;

  @NonNull
  public final EditText editTextExercise;

  @NonNull
  public final EditText editTextReps;

  @NonNull
  public final EditText editTextSets;

  @NonNull
  public final EditText editTextworkoutName;

  @NonNull
  public final ListView listViewExercises;

  private ActivityNuevaRutinaBinding(@NonNull RelativeLayout rootView,
      @NonNull Button buttonAddExercise, @NonNull Button confirmar,
      @NonNull EditText editTextExercise, @NonNull EditText editTextReps,
      @NonNull EditText editTextSets, @NonNull EditText editTextworkoutName,
      @NonNull ListView listViewExercises) {
    this.rootView = rootView;
    this.buttonAddExercise = buttonAddExercise;
    this.confirmar = confirmar;
    this.editTextExercise = editTextExercise;
    this.editTextReps = editTextReps;
    this.editTextSets = editTextSets;
    this.editTextworkoutName = editTextworkoutName;
    this.listViewExercises = listViewExercises;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNuevaRutinaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNuevaRutinaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_nueva_rutina, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNuevaRutinaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddExercise;
      Button buttonAddExercise = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddExercise == null) {
        break missingId;
      }

      id = R.id.confirmar;
      Button confirmar = ViewBindings.findChildViewById(rootView, id);
      if (confirmar == null) {
        break missingId;
      }

      id = R.id.editTextExercise;
      EditText editTextExercise = ViewBindings.findChildViewById(rootView, id);
      if (editTextExercise == null) {
        break missingId;
      }

      id = R.id.editTextReps;
      EditText editTextReps = ViewBindings.findChildViewById(rootView, id);
      if (editTextReps == null) {
        break missingId;
      }

      id = R.id.editTextSets;
      EditText editTextSets = ViewBindings.findChildViewById(rootView, id);
      if (editTextSets == null) {
        break missingId;
      }

      id = R.id.editTextworkoutName;
      EditText editTextworkoutName = ViewBindings.findChildViewById(rootView, id);
      if (editTextworkoutName == null) {
        break missingId;
      }

      id = R.id.listViewExercises;
      ListView listViewExercises = ViewBindings.findChildViewById(rootView, id);
      if (listViewExercises == null) {
        break missingId;
      }

      return new ActivityNuevaRutinaBinding((RelativeLayout) rootView, buttonAddExercise, confirmar,
          editTextExercise, editTextReps, editTextSets, editTextworkoutName, listViewExercises);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
